<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcquireToken" xml:space="preserve">
    <value>acquire token</value>
  </data>
  <data name="AcquireTokenAction" xml:space="preserve">
    <value>{0} account in environment '{1}'</value>
  </data>
  <data name="AddEnvironmentAction" xml:space="preserve">
    <value>add environment</value>
  </data>
  <data name="AssertNumberPositiveInvalidError" xml:space="preserve">
    <value>{0} must be greater than zero</value>
  </data>
  <data name="AssertNumberPositiveInvalidPrefix" xml:space="preserve">
    <value>number</value>
  </data>
  <data name="AssertStringNotEmptyInvalidError" xml:space="preserve">
    <value>{0} is not set</value>
  </data>
  <data name="AssertStringNotEmptyInvalidPrefix" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="BreakingChangeAttributeParameterChanging" xml:space="preserve">
    <value>
- The parameter : '{0}' is changing.</value>
  </data>
  <data name="BreakingChangeAttributeParameterMandatoryNow" xml:space="preserve">
    <value>
- The parameter : '{0}' is becoming mandatory.</value>
  </data>
  <data name="BreakingChangeAttributeParameterReplaced" xml:space="preserve">
    <value>
- The parameter : '{0}' is being replaced by mandatory parameter : '{1}'.</value>
  </data>
  <data name="BreakingChangeAttributeParameterReplacedMandatory" xml:space="preserve">
    <value>
- The parameter : '{0}' is being replaced by mandatory parameter : '{1}'.</value>
  </data>
  <data name="BreakingChangeAttributeParameterTypeChange" xml:space="preserve">
    <value>
The type of the parameter is changing from '{0}' to '{1}'.</value>
  </data>
  <data name="BreakingChangesAttributesChangeDescriptionMessage" xml:space="preserve">
    <value>
- Change description : {0}</value>
  </data>
  <data name="BreakingChangesAttributesCommandDeprecationMessageNoReplacement" xml:space="preserve">
    <value>The cmdlet is being deprecated. There will be no replacement for it.</value>
  </data>
  <data name="BreakingChangesAttributesCommandDeprecationMessageWithReplacement" xml:space="preserve">
    <value>The cmdlet '{0}' is replacing this cmdlet.</value>
  </data>
  <data name="BreakingChangesAttributesDeclarationMessage" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="BreakingChangesAttributesDeclarationMessageWithCmdletName" xml:space="preserve">
    <value>
- Cmdlet : '{0}'
 - {1}</value>
  </data>
  <data name="BreakingChangesAttributesFooterMessage" xml:space="preserve">
    <value>
Note : Go to {0} for steps to suppress this breaking change warning, and other information on breaking changes.</value>
  </data>
  <data name="BreakingChangesAttributesHeaderMessage" xml:space="preserve">
    <value>Upcoming breaking changes in the cmdlet '{0}' :</value>
  </data>
  <data name="BreakingChangesAttributesInEffectByDateMessage" xml:space="preserve">
    <value>
- This change will take effect on '{0}'</value>
  </data>
  <data name="BreakingChangesAttributesInEffectByVersion" xml:space="preserve">
    <value>
- The change is expected to take effect from the version : '{0}'</value>
  </data>
  <data name="BreakingChangesAttributesOutputChange1" xml:space="preserve">
    <value>
- The output type is changing from the existing type :'{0}' to the new type :'{1}'</value>
  </data>
  <data name="BreakingChangesAttributesOutputChange2" xml:space="preserve">
    <value>
- The output type '{0}' is changing</value>
  </data>
  <data name="BreakingChangesAttributesOutputPropertiesAdded" xml:space="preserve">
    <value>
- The following properties are being added to the output type :</value>
  </data>
  <data name="BreakingChangesAttributesOutputPropertiesRemoved" xml:space="preserve">
    <value>
- The following properties in the output type are being deprecated :</value>
  </data>
  <data name="BreakingChangesAttributesOutputTypeDeprecated" xml:space="preserve">
    <value>
The output type '{0}' is being deprecated without a replacement.</value>
  </data>
  <data name="BreakingChangesAttributesUsageChangeMessageConsole" xml:space="preserve">
    <value>
Cmdlet invocation changes :
    Old Way : {0}
    New Way : {1}</value>
  </data>
  <data name="DataCollectionConfigurationDefinition" xml:space="preserve">
    <value>Controls if data collection, to help improve Automation Brew cmdlets, is enabled. When enabled, telemetry is shared with the developers to identify patterns of usage to identify common issues and help improve the experience with the module. Automation Brew does not collect any personal or private information. This configuration is enabled by default, and you must opt-out if you which to disable this functionality.</value>
  </data>
  <data name="DisconnectAccountAction" xml:space="preserve">
    <value>remove account</value>
  </data>
  <data name="DisplayBreakingChangesConfigurationDefinition" xml:space="preserve">
    <value>Controls if warning messages for breaking changes are displayed or suppressed. When enabled, a breaking change warning is displayed when executing cmdlets with breaking changes in a future release.</value>
  </data>
  <data name="NewApplicationConsentAction" xml:space="preserve">
    <value>new application consent</value>
  </data>
  <data name="NewApplicationGrantAction" xml:space="preserve">
    <value>new application grant</value>
  </data>
  <data name="NewBulkRefreshTokenAction" xml:space="preserve">
    <value>new bulk refresh token</value>
  </data>
  <data name="NewDelegatedAdminAccessAssignmentAction" xml:space="preserve">
    <value>new delegate admin access assignment</value>
  </data>
  <data name="NewDelegatedAdminRelationshipAction" xml:space="preserve">
    <value>new delegate admin relationship</value>
  </data>
  <data name="NewDelegatedAdminRelationshipRequestAction" xml:space="preserve">
    <value>new delegate admin relationship request</value>
  </data>
  <data name="NewRiskyUserAction" xml:space="preserve">
    <value>generate new user risk event</value>
  </data>
  <data name="RegisterDeviceAction" xml:space="preserve">
    <value>register the device with the management service</value>
  </data>
  <data name="RemoveEnvironmentAction" xml:space="preserve">
    <value>remove environment</value>
  </data>
  <data name="UnregisterDeviceAction" xml:space="preserve">
    <value>unregister the from the management service</value>
  </data>
  <data name="UpdateConfigurationAction" xml:space="preserve">
    <value>update the following configurations '{0}'</value>
  </data>
  <data name="UpdateEnvironmentAction" xml:space="preserve">
    <value>update environment</value>
  </data>
</root>